{     
    "$schema": "https://unpkg.com/@camunda/zeebe-element-templates-json-schema/resources/schema.json",
    "name": "SpaceTraders API - Fleet",
    "id": "com.camunda.generated.FleetApi",
    "description": "SpaceTraders API - Fleet, Schema Version 2.0.0. Generated using the OpenAPI generator.",
        "icon": {
        "faviconBasePath": "https://api.spacetraders.io/v2",
        "contents": "https://t0.gstatic.com/faviconV2?client=SOCIAL&type=FAVICON&fallback_opts=TYPE,SIZE,URL&url=https://api.spacetraders.io/v2&size=32"
    },
    "version": 1,
    "appliesTo": [
        "bpmn:Task"
    ],
    "elementType": {
        "value": "bpmn:ServiceTask"
    },
    "groups": [
        {
            "id": "authentication",
            "label": "Authentication"
        },
        {
            "id": "operation",
            "label": "Operation"
        },
        {
            "id": "responseMapping",
            "label": "Response Mapping"
        },
        {
            "id": "createChart",
            "label": "Parameters"
        },
        {
            "id": "createShipShipScan",
            "label": "Parameters"
        },
        {
            "id": "createShipSystemScan",
            "label": "Parameters"
        },
        {
            "id": "createShipWaypointScan",
            "label": "Parameters"
        },
        {
            "id": "createSurvey",
            "label": "Parameters"
        },
        {
            "id": "dockShip",
            "label": "Parameters"
        },
        {
            "id": "extractResources",
            "label": "Parameters"
        },
        {
            "id": "getMounts",
            "label": "Parameters"
        },
        {
            "id": "getMyShip",
            "label": "Parameters"
        },
        {
            "id": "getMyShipCargo",
            "label": "Parameters"
        },
        {
            "id": "getMyShips",
            "label": "Parameters"
        },
        {
            "id": "getShipCooldown",
            "label": "Parameters"
        },
        {
            "id": "getShipNav",
            "label": "Parameters"
        },
        {
            "id": "installMount",
            "label": "Parameters"
        },
        {
            "id": "jettison",
            "label": "Parameters"
        },
        {
            "id": "jumpShip",
            "label": "Parameters"
        },
        {
            "id": "navigateShip",
            "label": "Parameters"
        },
        {
            "id": "negotiateContract",
            "label": "Parameters"
        },
        {
            "id": "orbitShip",
            "label": "Parameters"
        },
        {
            "id": "patchShipNav",
            "label": "Parameters"
        },
        {
            "id": "purchaseCargo",
            "label": "Parameters"
        },
        {
            "id": "purchaseShip",
            "label": "Parameters"
        },
        {
            "id": "refuelShip",
            "label": "Parameters"
        },
        {
            "id": "removeMount",
            "label": "Parameters"
        },
        {
            "id": "sellCargo",
            "label": "Parameters"
        },
        {
            "id": "shipRefine",
            "label": "Parameters"
        },
        {
            "id": "transferCargo",
            "label": "Parameters"
        },
        {
            "id": "warpShip",
            "label": "Parameters"
        }
    ,
        {
            "id": "modificationWarning",
            "label": "Generated (DO NOT MODIFY)"
        }
    ],
    "properties": [
        {
            "type": "Hidden",
            "value": "io.camunda:http-json:1",
            "binding": {
                "type": "zeebe:taskDefinition:type"
            }
        },
        {
            "type": "Hidden",
            "value": "placeholder",
            "binding": {
                "type": "zeebe:input",
                "name": "objects"
            }
        },
        {
            "label": "Operation",
            "id": "operation",
            "description": "Specify the operation to call.",
            "type": "Dropdown",
            "group": "operation",
            "value": "createChart",
            "choices": [
                { "name": "Reset choice", "value": "-" },
                    { "name": "createChart - Create Chart", "value": "createChart" },
                    { "name": "createShipShipScan - Scan Ships", "value": "createShipShipScan" },
                    { "name": "createShipSystemScan - Scan Systems", "value": "createShipSystemScan" },
                    { "name": "createShipWaypointScan - Scan Waypoints", "value": "createShipWaypointScan" },
                    { "name": "createSurvey - Create Survey", "value": "createSurvey" },
                    { "name": "dockShip - Dock Ship", "value": "dockShip" },
                    { "name": "extractResources - Extract Resources", "value": "extractResources" },
                    { "name": "getMounts - Get Mounts", "value": "getMounts" },
                    { "name": "getMyShip - Get Ship", "value": "getMyShip" },
                    { "name": "getMyShipCargo - Get Ship Cargo", "value": "getMyShipCargo" },
                    { "name": "getMyShips - List Ships", "value": "getMyShips" },
                    { "name": "getShipCooldown - Get Ship Cooldown", "value": "getShipCooldown" },
                    { "name": "getShipNav - Get Ship Nav", "value": "getShipNav" },
                    { "name": "installMount - Install Mount", "value": "installMount" },
                    { "name": "jettison - Jettison Cargo", "value": "jettison" },
                    { "name": "jumpShip - Jump Ship", "value": "jumpShip" },
                    { "name": "navigateShip - Navigate Ship", "value": "navigateShip" },
                    { "name": "negotiateContract - Negotiate Contract", "value": "negotiateContract" },
                    { "name": "orbitShip - Orbit Ship", "value": "orbitShip" },
                    { "name": "patchShipNav - Patch Ship Nav", "value": "patchShipNav" },
                    { "name": "purchaseCargo - Purchase Cargo", "value": "purchaseCargo" },
                    { "name": "purchaseShip - Purchase Ship", "value": "purchaseShip" },
                    { "name": "refuelShip - Refuel Ship", "value": "refuelShip" },
                    { "name": "removeMount - Remove Mount", "value": "removeMount" },
                    { "name": "sellCargo - Sell Cargo", "value": "sellCargo" },
                    { "name": "shipRefine - Ship Refine", "value": "shipRefine" },
                    { "name": "transferCargo - Transfer Cargo", "value": "transferCargo" },
                    { "name": "warpShip - Warp Ship", "value": "warpShip" }
            ],
            "binding": {
                "type": "zeebe:taskHeader",
                "key": "operation"
            }
        },

        {
            "label": "shipSymbol",
            "description": "The symbol of the ship.",
            "type": "String",
            "feel": "optional",
            "group": "createChart",
            "value": "null",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.createChart_shipSymbol"
            },
            "condition": {
                "property": "operation",
                "equals": "createChart"
            },
            "constraints": {
                "notEmpty": true
            }
        },
            {
        "label": "Result Variable",
        "description": "Name of variable to store the response in",
        "group": "responseMapping",
        "value": "response_createChart",
        "type": "String",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultVariable"
        },
        "condition": {
            "property": "operation",
            "equals": "createChart"
        }
    },
    {
        "label": "Result Expression",
        "description": "Expression to map the response into process variables",
        "group": "responseMapping",
        "type": "Text",
        "feel": "required",
        "value": "=<CreateChart201Response-response>",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultExpression"
        },
        "condition": {
            "property": "operation",
            "equals": "createChart"
        }
    },
        
    {
        "type": "Hidden",
        "value": "bearer",
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.type"
        },
        "condition": {
            "property": "operation",
            "equals": "createChart"
        }
    },
    {
        "label": "API Bearer Token (Bearer Authentication)",
        "group": "authentication",
        "type": "String",
        "feel": "optional",
        "optional": true,
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.token"
        },
        "condition": {
            "property": "operation",
            "equals": "createChart"
        }
    },

            {
        "label": "Method",
        "group": "modificationWarning",
        "type": "Dropdown",
        "value": "post",
        "condition": {
            "property": "operation",
            "equals": "createChart"
        },
        "choices": [
            { "name": "GET", "value": "get" },
            { "name": "POST", "value": "post" },
            { "name": "PATCH", "value": "patch" },
            { "name": "PUT", "value": "put" },
            { "name": "DELETE", "value": "delete" }
        ],
        "binding": {
            "type": "zeebe:input",
            "name": "method"
        }
    },
    {
        "label": "URL",
        "group": "modificationWarning",
        "type": "String",
        "feel": "optional",
        "value": "=\"https://api.spacetraders.io/v2/my/ships/\" + string(objects.createChart_shipSymbol) + \"/chart\"",
        "binding": {
            "type": "zeebe:input",
            "name": "url"
        },
        "condition": {
            "property": "operation",
            "equals": "createChart"
        }
    },
    {
        "label": "Query Parameters",
        "description": "FEEL map containing the query parameters",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "={\n}",
        "binding": {
            "type": "zeebe:input",
            "name": "queryParameters"
        },
        "condition": {
            "property": "operation",
            "equals": "createChart"
        },
        "optional": true
    },
    {
        "label": "Request Body",
        "description": "JSON payload to send with the request",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "=",
        "binding": {
            "type": "zeebe:input",
            "name": "body"
        },
        "condition": {
            "property": "operation",
            "equals": "createChart"
        },
        "optional": true
    },
        {
            "label": "shipSymbol",
            "description": "The ship symbol.",
            "type": "String",
            "feel": "optional",
            "group": "createShipShipScan",
            "value": "null",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.createShipShipScan_shipSymbol"
            },
            "condition": {
                "property": "operation",
                "equals": "createShipShipScan"
            },
            "constraints": {
                "notEmpty": true
            }
        },
            {
        "label": "Result Variable",
        "description": "Name of variable to store the response in",
        "group": "responseMapping",
        "value": "response_createShipShipScan",
        "type": "String",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultVariable"
        },
        "condition": {
            "property": "operation",
            "equals": "createShipShipScan"
        }
    },
    {
        "label": "Result Expression",
        "description": "Expression to map the response into process variables",
        "group": "responseMapping",
        "type": "Text",
        "feel": "required",
        "value": "=<CreateShipShipScan201Response-response>",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultExpression"
        },
        "condition": {
            "property": "operation",
            "equals": "createShipShipScan"
        }
    },
        
    {
        "type": "Hidden",
        "value": "bearer",
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.type"
        },
        "condition": {
            "property": "operation",
            "equals": "createShipShipScan"
        }
    },
    {
        "label": "API Bearer Token (Bearer Authentication)",
        "group": "authentication",
        "type": "String",
        "feel": "optional",
        "optional": true,
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.token"
        },
        "condition": {
            "property": "operation",
            "equals": "createShipShipScan"
        }
    },

            {
        "label": "Method",
        "group": "modificationWarning",
        "type": "Dropdown",
        "value": "post",
        "condition": {
            "property": "operation",
            "equals": "createShipShipScan"
        },
        "choices": [
            { "name": "GET", "value": "get" },
            { "name": "POST", "value": "post" },
            { "name": "PATCH", "value": "patch" },
            { "name": "PUT", "value": "put" },
            { "name": "DELETE", "value": "delete" }
        ],
        "binding": {
            "type": "zeebe:input",
            "name": "method"
        }
    },
    {
        "label": "URL",
        "group": "modificationWarning",
        "type": "String",
        "feel": "optional",
        "value": "=\"https://api.spacetraders.io/v2/my/ships/\" + string(objects.createShipShipScan_shipSymbol) + \"/scan/ships\"",
        "binding": {
            "type": "zeebe:input",
            "name": "url"
        },
        "condition": {
            "property": "operation",
            "equals": "createShipShipScan"
        }
    },
    {
        "label": "Query Parameters",
        "description": "FEEL map containing the query parameters",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "={\n}",
        "binding": {
            "type": "zeebe:input",
            "name": "queryParameters"
        },
        "condition": {
            "property": "operation",
            "equals": "createShipShipScan"
        },
        "optional": true
    },
    {
        "label": "Request Body",
        "description": "JSON payload to send with the request",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "=",
        "binding": {
            "type": "zeebe:input",
            "name": "body"
        },
        "condition": {
            "property": "operation",
            "equals": "createShipShipScan"
        },
        "optional": true
    },
        {
            "label": "shipSymbol",
            "description": "The ship symbol.",
            "type": "String",
            "feel": "optional",
            "group": "createShipSystemScan",
            "value": "null",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.createShipSystemScan_shipSymbol"
            },
            "condition": {
                "property": "operation",
                "equals": "createShipSystemScan"
            },
            "constraints": {
                "notEmpty": true
            }
        },
            {
        "label": "Result Variable",
        "description": "Name of variable to store the response in",
        "group": "responseMapping",
        "value": "response_createShipSystemScan",
        "type": "String",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultVariable"
        },
        "condition": {
            "property": "operation",
            "equals": "createShipSystemScan"
        }
    },
    {
        "label": "Result Expression",
        "description": "Expression to map the response into process variables",
        "group": "responseMapping",
        "type": "Text",
        "feel": "required",
        "value": "=<CreateShipSystemScan201Response-response>",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultExpression"
        },
        "condition": {
            "property": "operation",
            "equals": "createShipSystemScan"
        }
    },
        
    {
        "type": "Hidden",
        "value": "bearer",
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.type"
        },
        "condition": {
            "property": "operation",
            "equals": "createShipSystemScan"
        }
    },
    {
        "label": "API Bearer Token (Bearer Authentication)",
        "group": "authentication",
        "type": "String",
        "feel": "optional",
        "optional": true,
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.token"
        },
        "condition": {
            "property": "operation",
            "equals": "createShipSystemScan"
        }
    },

            {
        "label": "Method",
        "group": "modificationWarning",
        "type": "Dropdown",
        "value": "post",
        "condition": {
            "property": "operation",
            "equals": "createShipSystemScan"
        },
        "choices": [
            { "name": "GET", "value": "get" },
            { "name": "POST", "value": "post" },
            { "name": "PATCH", "value": "patch" },
            { "name": "PUT", "value": "put" },
            { "name": "DELETE", "value": "delete" }
        ],
        "binding": {
            "type": "zeebe:input",
            "name": "method"
        }
    },
    {
        "label": "URL",
        "group": "modificationWarning",
        "type": "String",
        "feel": "optional",
        "value": "=\"https://api.spacetraders.io/v2/my/ships/\" + string(objects.createShipSystemScan_shipSymbol) + \"/scan/systems\"",
        "binding": {
            "type": "zeebe:input",
            "name": "url"
        },
        "condition": {
            "property": "operation",
            "equals": "createShipSystemScan"
        }
    },
    {
        "label": "Query Parameters",
        "description": "FEEL map containing the query parameters",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "={\n}",
        "binding": {
            "type": "zeebe:input",
            "name": "queryParameters"
        },
        "condition": {
            "property": "operation",
            "equals": "createShipSystemScan"
        },
        "optional": true
    },
    {
        "label": "Request Body",
        "description": "JSON payload to send with the request",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "=",
        "binding": {
            "type": "zeebe:input",
            "name": "body"
        },
        "condition": {
            "property": "operation",
            "equals": "createShipSystemScan"
        },
        "optional": true
    },
        {
            "label": "shipSymbol",
            "description": "The ship symbol.",
            "type": "String",
            "feel": "optional",
            "group": "createShipWaypointScan",
            "value": "null",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.createShipWaypointScan_shipSymbol"
            },
            "condition": {
                "property": "operation",
                "equals": "createShipWaypointScan"
            },
            "constraints": {
                "notEmpty": true
            }
        },
            {
        "label": "Result Variable",
        "description": "Name of variable to store the response in",
        "group": "responseMapping",
        "value": "response_createShipWaypointScan",
        "type": "String",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultVariable"
        },
        "condition": {
            "property": "operation",
            "equals": "createShipWaypointScan"
        }
    },
    {
        "label": "Result Expression",
        "description": "Expression to map the response into process variables",
        "group": "responseMapping",
        "type": "Text",
        "feel": "required",
        "value": "=<CreateShipWaypointScan201Response-response>",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultExpression"
        },
        "condition": {
            "property": "operation",
            "equals": "createShipWaypointScan"
        }
    },
        
    {
        "type": "Hidden",
        "value": "bearer",
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.type"
        },
        "condition": {
            "property": "operation",
            "equals": "createShipWaypointScan"
        }
    },
    {
        "label": "API Bearer Token (Bearer Authentication)",
        "group": "authentication",
        "type": "String",
        "feel": "optional",
        "optional": true,
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.token"
        },
        "condition": {
            "property": "operation",
            "equals": "createShipWaypointScan"
        }
    },

            {
        "label": "Method",
        "group": "modificationWarning",
        "type": "Dropdown",
        "value": "post",
        "condition": {
            "property": "operation",
            "equals": "createShipWaypointScan"
        },
        "choices": [
            { "name": "GET", "value": "get" },
            { "name": "POST", "value": "post" },
            { "name": "PATCH", "value": "patch" },
            { "name": "PUT", "value": "put" },
            { "name": "DELETE", "value": "delete" }
        ],
        "binding": {
            "type": "zeebe:input",
            "name": "method"
        }
    },
    {
        "label": "URL",
        "group": "modificationWarning",
        "type": "String",
        "feel": "optional",
        "value": "=\"https://api.spacetraders.io/v2/my/ships/\" + string(objects.createShipWaypointScan_shipSymbol) + \"/scan/waypoints\"",
        "binding": {
            "type": "zeebe:input",
            "name": "url"
        },
        "condition": {
            "property": "operation",
            "equals": "createShipWaypointScan"
        }
    },
    {
        "label": "Query Parameters",
        "description": "FEEL map containing the query parameters",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "={\n}",
        "binding": {
            "type": "zeebe:input",
            "name": "queryParameters"
        },
        "condition": {
            "property": "operation",
            "equals": "createShipWaypointScan"
        },
        "optional": true
    },
    {
        "label": "Request Body",
        "description": "JSON payload to send with the request",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "=",
        "binding": {
            "type": "zeebe:input",
            "name": "body"
        },
        "condition": {
            "property": "operation",
            "equals": "createShipWaypointScan"
        },
        "optional": true
    },
        {
            "label": "shipSymbol",
            "description": "The symbol of the ship.",
            "type": "String",
            "feel": "optional",
            "group": "createSurvey",
            "value": "null",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.createSurvey_shipSymbol"
            },
            "condition": {
                "property": "operation",
                "equals": "createSurvey"
            },
            "constraints": {
                "notEmpty": true
            }
        },
            {
        "label": "Result Variable",
        "description": "Name of variable to store the response in",
        "group": "responseMapping",
        "value": "response_createSurvey",
        "type": "String",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultVariable"
        },
        "condition": {
            "property": "operation",
            "equals": "createSurvey"
        }
    },
    {
        "label": "Result Expression",
        "description": "Expression to map the response into process variables",
        "group": "responseMapping",
        "type": "Text",
        "feel": "required",
        "value": "=<CreateSurvey201Response-response>",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultExpression"
        },
        "condition": {
            "property": "operation",
            "equals": "createSurvey"
        }
    },
        
    {
        "type": "Hidden",
        "value": "bearer",
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.type"
        },
        "condition": {
            "property": "operation",
            "equals": "createSurvey"
        }
    },
    {
        "label": "API Bearer Token (Bearer Authentication)",
        "group": "authentication",
        "type": "String",
        "feel": "optional",
        "optional": true,
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.token"
        },
        "condition": {
            "property": "operation",
            "equals": "createSurvey"
        }
    },

            {
        "label": "Method",
        "group": "modificationWarning",
        "type": "Dropdown",
        "value": "post",
        "condition": {
            "property": "operation",
            "equals": "createSurvey"
        },
        "choices": [
            { "name": "GET", "value": "get" },
            { "name": "POST", "value": "post" },
            { "name": "PATCH", "value": "patch" },
            { "name": "PUT", "value": "put" },
            { "name": "DELETE", "value": "delete" }
        ],
        "binding": {
            "type": "zeebe:input",
            "name": "method"
        }
    },
    {
        "label": "URL",
        "group": "modificationWarning",
        "type": "String",
        "feel": "optional",
        "value": "=\"https://api.spacetraders.io/v2/my/ships/\" + string(objects.createSurvey_shipSymbol) + \"/survey\"",
        "binding": {
            "type": "zeebe:input",
            "name": "url"
        },
        "condition": {
            "property": "operation",
            "equals": "createSurvey"
        }
    },
    {
        "label": "Query Parameters",
        "description": "FEEL map containing the query parameters",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "={\n}",
        "binding": {
            "type": "zeebe:input",
            "name": "queryParameters"
        },
        "condition": {
            "property": "operation",
            "equals": "createSurvey"
        },
        "optional": true
    },
    {
        "label": "Request Body",
        "description": "JSON payload to send with the request",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "=",
        "binding": {
            "type": "zeebe:input",
            "name": "body"
        },
        "condition": {
            "property": "operation",
            "equals": "createSurvey"
        },
        "optional": true
    },
        {
            "label": "shipSymbol",
            "description": "The symbol of the ship.",
            "type": "String",
            "feel": "optional",
            "group": "dockShip",
            "value": "null",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.dockShip_shipSymbol"
            },
            "condition": {
                "property": "operation",
                "equals": "dockShip"
            },
            "constraints": {
                "notEmpty": true
            }
        },
            {
        "label": "Result Variable",
        "description": "Name of variable to store the response in",
        "group": "responseMapping",
        "value": "response_dockShip",
        "type": "String",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultVariable"
        },
        "condition": {
            "property": "operation",
            "equals": "dockShip"
        }
    },
    {
        "label": "Result Expression",
        "description": "Expression to map the response into process variables",
        "group": "responseMapping",
        "type": "Text",
        "feel": "required",
        "value": "=<DockShip200Response-response>",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultExpression"
        },
        "condition": {
            "property": "operation",
            "equals": "dockShip"
        }
    },
        
    {
        "type": "Hidden",
        "value": "bearer",
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.type"
        },
        "condition": {
            "property": "operation",
            "equals": "dockShip"
        }
    },
    {
        "label": "API Bearer Token (Bearer Authentication)",
        "group": "authentication",
        "type": "String",
        "feel": "optional",
        "optional": true,
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.token"
        },
        "condition": {
            "property": "operation",
            "equals": "dockShip"
        }
    },

            {
        "label": "Method",
        "group": "modificationWarning",
        "type": "Dropdown",
        "value": "post",
        "condition": {
            "property": "operation",
            "equals": "dockShip"
        },
        "choices": [
            { "name": "GET", "value": "get" },
            { "name": "POST", "value": "post" },
            { "name": "PATCH", "value": "patch" },
            { "name": "PUT", "value": "put" },
            { "name": "DELETE", "value": "delete" }
        ],
        "binding": {
            "type": "zeebe:input",
            "name": "method"
        }
    },
    {
        "label": "URL",
        "group": "modificationWarning",
        "type": "String",
        "feel": "optional",
        "value": "=\"https://api.spacetraders.io/v2/my/ships/\" + string(objects.dockShip_shipSymbol) + \"/dock\"",
        "binding": {
            "type": "zeebe:input",
            "name": "url"
        },
        "condition": {
            "property": "operation",
            "equals": "dockShip"
        }
    },
    {
        "label": "Query Parameters",
        "description": "FEEL map containing the query parameters",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "={\n}",
        "binding": {
            "type": "zeebe:input",
            "name": "queryParameters"
        },
        "condition": {
            "property": "operation",
            "equals": "dockShip"
        },
        "optional": true
    },
    {
        "label": "Request Body",
        "description": "JSON payload to send with the request",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "=",
        "binding": {
            "type": "zeebe:input",
            "name": "body"
        },
        "condition": {
            "property": "operation",
            "equals": "dockShip"
        },
        "optional": true
    },
        {
            "label": "shipSymbol",
            "description": "The ship symbol.",
            "type": "String",
            "feel": "optional",
            "group": "extractResources",
            "value": "null",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.extractResources_shipSymbol"
            },
            "condition": {
                "property": "operation",
                "equals": "extractResources"
            },
            "constraints": {
                "notEmpty": true
            }
        },
        {
            "label": "extractResourcesRequest",
            "description": "",
            "type": "String",
            "feel": "required",
            "group": "extractResources",
            "value": "=<ExtractResourcesRequest>",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.extractResources_extractResourcesRequest"
            },
            "condition": {
                "property": "operation",
                "equals": "extractResources"
            },
            "constraints": {
                "notEmpty": true
            }
        },
            {
        "label": "Result Variable",
        "description": "Name of variable to store the response in",
        "group": "responseMapping",
        "value": "response_extractResources",
        "type": "String",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultVariable"
        },
        "condition": {
            "property": "operation",
            "equals": "extractResources"
        }
    },
    {
        "label": "Result Expression",
        "description": "Expression to map the response into process variables",
        "group": "responseMapping",
        "type": "Text",
        "feel": "required",
        "value": "=<ExtractResources201Response-response>",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultExpression"
        },
        "condition": {
            "property": "operation",
            "equals": "extractResources"
        }
    },
        
    {
        "type": "Hidden",
        "value": "bearer",
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.type"
        },
        "condition": {
            "property": "operation",
            "equals": "extractResources"
        }
    },
    {
        "label": "API Bearer Token (Bearer Authentication)",
        "group": "authentication",
        "type": "String",
        "feel": "optional",
        "optional": true,
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.token"
        },
        "condition": {
            "property": "operation",
            "equals": "extractResources"
        }
    },

            {
        "label": "Method",
        "group": "modificationWarning",
        "type": "Dropdown",
        "value": "post",
        "condition": {
            "property": "operation",
            "equals": "extractResources"
        },
        "choices": [
            { "name": "GET", "value": "get" },
            { "name": "POST", "value": "post" },
            { "name": "PATCH", "value": "patch" },
            { "name": "PUT", "value": "put" },
            { "name": "DELETE", "value": "delete" }
        ],
        "binding": {
            "type": "zeebe:input",
            "name": "method"
        }
    },
    {
        "label": "URL",
        "group": "modificationWarning",
        "type": "String",
        "feel": "optional",
        "value": "=\"https://api.spacetraders.io/v2/my/ships/\" + string(objects.extractResources_shipSymbol) + \"/extract\"",
        "binding": {
            "type": "zeebe:input",
            "name": "url"
        },
        "condition": {
            "property": "operation",
            "equals": "extractResources"
        }
    },
    {
        "label": "Query Parameters",
        "description": "FEEL map containing the query parameters",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "={\n}",
        "binding": {
            "type": "zeebe:input",
            "name": "queryParameters"
        },
        "condition": {
            "property": "operation",
            "equals": "extractResources"
        },
        "optional": true
    },
    {
        "label": "Request Body",
        "description": "JSON payload to send with the request",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "= objects.extractResources_extractResourcesRequest",
        "binding": {
            "type": "zeebe:input",
            "name": "body"
        },
        "condition": {
            "property": "operation",
            "equals": "extractResources"
        },
        "optional": true
    },
        {
            "label": "shipSymbol",
            "description": "The ship&#39;s symbol.",
            "type": "String",
            "feel": "optional",
            "group": "getMounts",
            "value": "null",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.getMounts_shipSymbol"
            },
            "condition": {
                "property": "operation",
                "equals": "getMounts"
            },
            "constraints": {
                "notEmpty": true
            }
        },
            {
        "label": "Result Variable",
        "description": "Name of variable to store the response in",
        "group": "responseMapping",
        "value": "response_getMounts",
        "type": "String",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultVariable"
        },
        "condition": {
            "property": "operation",
            "equals": "getMounts"
        }
    },
    {
        "label": "Result Expression",
        "description": "Expression to map the response into process variables",
        "group": "responseMapping",
        "type": "Text",
        "feel": "required",
        "value": "=<GetMounts200Response-response>",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultExpression"
        },
        "condition": {
            "property": "operation",
            "equals": "getMounts"
        }
    },
        
    {
        "type": "Hidden",
        "value": "bearer",
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.type"
        },
        "condition": {
            "property": "operation",
            "equals": "getMounts"
        }
    },
    {
        "label": "API Bearer Token (Bearer Authentication)",
        "group": "authentication",
        "type": "String",
        "feel": "optional",
        "optional": true,
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.token"
        },
        "condition": {
            "property": "operation",
            "equals": "getMounts"
        }
    },

            {
        "label": "Method",
        "group": "modificationWarning",
        "type": "Dropdown",
        "value": "get",
        "condition": {
            "property": "operation",
            "equals": "getMounts"
        },
        "choices": [
            { "name": "GET", "value": "get" },
            { "name": "POST", "value": "post" },
            { "name": "PATCH", "value": "patch" },
            { "name": "PUT", "value": "put" },
            { "name": "DELETE", "value": "delete" }
        ],
        "binding": {
            "type": "zeebe:input",
            "name": "method"
        }
    },
    {
        "label": "URL",
        "group": "modificationWarning",
        "type": "String",
        "feel": "optional",
        "value": "=\"https://api.spacetraders.io/v2/my/ships/\" + string(objects.getMounts_shipSymbol) + \"/mounts\"",
        "binding": {
            "type": "zeebe:input",
            "name": "url"
        },
        "condition": {
            "property": "operation",
            "equals": "getMounts"
        }
    },
    {
        "label": "Query Parameters",
        "description": "FEEL map containing the query parameters",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "={\n}",
        "binding": {
            "type": "zeebe:input",
            "name": "queryParameters"
        },
        "condition": {
            "property": "operation",
            "equals": "getMounts"
        },
        "optional": true
    },
        {
            "label": "shipSymbol",
            "description": "The symbol of the ship.",
            "type": "String",
            "feel": "optional",
            "group": "getMyShip",
            "value": "null",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.getMyShip_shipSymbol"
            },
            "condition": {
                "property": "operation",
                "equals": "getMyShip"
            },
            "constraints": {
                "notEmpty": true
            }
        },
            {
        "label": "Result Variable",
        "description": "Name of variable to store the response in",
        "group": "responseMapping",
        "value": "response_getMyShip",
        "type": "String",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultVariable"
        },
        "condition": {
            "property": "operation",
            "equals": "getMyShip"
        }
    },
    {
        "label": "Result Expression",
        "description": "Expression to map the response into process variables",
        "group": "responseMapping",
        "type": "Text",
        "feel": "required",
        "value": "=<GetMyShip200Response-response>",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultExpression"
        },
        "condition": {
            "property": "operation",
            "equals": "getMyShip"
        }
    },
        
    {
        "type": "Hidden",
        "value": "bearer",
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.type"
        },
        "condition": {
            "property": "operation",
            "equals": "getMyShip"
        }
    },
    {
        "label": "API Bearer Token (Bearer Authentication)",
        "group": "authentication",
        "type": "String",
        "feel": "optional",
        "optional": true,
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.token"
        },
        "condition": {
            "property": "operation",
            "equals": "getMyShip"
        }
    },

            {
        "label": "Method",
        "group": "modificationWarning",
        "type": "Dropdown",
        "value": "get",
        "condition": {
            "property": "operation",
            "equals": "getMyShip"
        },
        "choices": [
            { "name": "GET", "value": "get" },
            { "name": "POST", "value": "post" },
            { "name": "PATCH", "value": "patch" },
            { "name": "PUT", "value": "put" },
            { "name": "DELETE", "value": "delete" }
        ],
        "binding": {
            "type": "zeebe:input",
            "name": "method"
        }
    },
    {
        "label": "URL",
        "group": "modificationWarning",
        "type": "String",
        "feel": "optional",
        "value": "=\"https://api.spacetraders.io/v2/my/ships/\" + string(objects.getMyShip_shipSymbol) + \"\"",
        "binding": {
            "type": "zeebe:input",
            "name": "url"
        },
        "condition": {
            "property": "operation",
            "equals": "getMyShip"
        }
    },
    {
        "label": "Query Parameters",
        "description": "FEEL map containing the query parameters",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "={\n}",
        "binding": {
            "type": "zeebe:input",
            "name": "queryParameters"
        },
        "condition": {
            "property": "operation",
            "equals": "getMyShip"
        },
        "optional": true
    },
        {
            "label": "shipSymbol",
            "description": "The symbol of the ship.",
            "type": "String",
            "feel": "optional",
            "group": "getMyShipCargo",
            "value": "null",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.getMyShipCargo_shipSymbol"
            },
            "condition": {
                "property": "operation",
                "equals": "getMyShipCargo"
            },
            "constraints": {
                "notEmpty": true
            }
        },
            {
        "label": "Result Variable",
        "description": "Name of variable to store the response in",
        "group": "responseMapping",
        "value": "response_getMyShipCargo",
        "type": "String",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultVariable"
        },
        "condition": {
            "property": "operation",
            "equals": "getMyShipCargo"
        }
    },
    {
        "label": "Result Expression",
        "description": "Expression to map the response into process variables",
        "group": "responseMapping",
        "type": "Text",
        "feel": "required",
        "value": "=<GetMyShipCargo200Response-response>",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultExpression"
        },
        "condition": {
            "property": "operation",
            "equals": "getMyShipCargo"
        }
    },
        
    {
        "type": "Hidden",
        "value": "bearer",
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.type"
        },
        "condition": {
            "property": "operation",
            "equals": "getMyShipCargo"
        }
    },
    {
        "label": "API Bearer Token (Bearer Authentication)",
        "group": "authentication",
        "type": "String",
        "feel": "optional",
        "optional": true,
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.token"
        },
        "condition": {
            "property": "operation",
            "equals": "getMyShipCargo"
        }
    },

            {
        "label": "Method",
        "group": "modificationWarning",
        "type": "Dropdown",
        "value": "get",
        "condition": {
            "property": "operation",
            "equals": "getMyShipCargo"
        },
        "choices": [
            { "name": "GET", "value": "get" },
            { "name": "POST", "value": "post" },
            { "name": "PATCH", "value": "patch" },
            { "name": "PUT", "value": "put" },
            { "name": "DELETE", "value": "delete" }
        ],
        "binding": {
            "type": "zeebe:input",
            "name": "method"
        }
    },
    {
        "label": "URL",
        "group": "modificationWarning",
        "type": "String",
        "feel": "optional",
        "value": "=\"https://api.spacetraders.io/v2/my/ships/\" + string(objects.getMyShipCargo_shipSymbol) + \"/cargo\"",
        "binding": {
            "type": "zeebe:input",
            "name": "url"
        },
        "condition": {
            "property": "operation",
            "equals": "getMyShipCargo"
        }
    },
    {
        "label": "Query Parameters",
        "description": "FEEL map containing the query parameters",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "={\n}",
        "binding": {
            "type": "zeebe:input",
            "name": "queryParameters"
        },
        "condition": {
            "property": "operation",
            "equals": "getMyShipCargo"
        },
        "optional": true
    },
        {
            "label": "page",
            "description": "What entry offset to request",
            "type": "String",
            "feel": "optional",
            "group": "getMyShips",
            "value": "1",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.getMyShips_page"
            },
            "condition": {
                "property": "operation",
                "equals": "getMyShips"
            },
            "constraints": {
                "notEmpty": true
            }
        },
        {
            "label": "limit",
            "description": "How many entries to return per page",
            "type": "String",
            "feel": "optional",
            "group": "getMyShips",
            "value": "10",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.getMyShips_limit"
            },
            "condition": {
                "property": "operation",
                "equals": "getMyShips"
            },
            "constraints": {
                "notEmpty": true
            }
        },
            {
        "label": "Result Variable",
        "description": "Name of variable to store the response in",
        "group": "responseMapping",
        "value": "response_getMyShips",
        "type": "String",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultVariable"
        },
        "condition": {
            "property": "operation",
            "equals": "getMyShips"
        }
    },
    {
        "label": "Result Expression",
        "description": "Expression to map the response into process variables",
        "group": "responseMapping",
        "type": "Text",
        "feel": "required",
        "value": "=<GetMyShips200Response-response>",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultExpression"
        },
        "condition": {
            "property": "operation",
            "equals": "getMyShips"
        }
    },
        
    {
        "type": "Hidden",
        "value": "bearer",
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.type"
        },
        "condition": {
            "property": "operation",
            "equals": "getMyShips"
        }
    },
    {
        "label": "API Bearer Token (Bearer Authentication)",
        "group": "authentication",
        "type": "String",
        "feel": "optional",
        "optional": true,
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.token"
        },
        "condition": {
            "property": "operation",
            "equals": "getMyShips"
        }
    },

            {
        "label": "Method",
        "group": "modificationWarning",
        "type": "Dropdown",
        "value": "get",
        "condition": {
            "property": "operation",
            "equals": "getMyShips"
        },
        "choices": [
            { "name": "GET", "value": "get" },
            { "name": "POST", "value": "post" },
            { "name": "PATCH", "value": "patch" },
            { "name": "PUT", "value": "put" },
            { "name": "DELETE", "value": "delete" }
        ],
        "binding": {
            "type": "zeebe:input",
            "name": "method"
        }
    },
    {
        "label": "URL",
        "group": "modificationWarning",
        "type": "String",
        "feel": "optional",
        "value": "=\"https://api.spacetraders.io/v2/my/ships\"",
        "binding": {
            "type": "zeebe:input",
            "name": "url"
        },
        "condition": {
            "property": "operation",
            "equals": "getMyShips"
        }
    },
    {
        "label": "Query Parameters",
        "description": "FEEL map containing the query parameters",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "={\n\t\"page\": objects.getMyShips_page,\n\t\"limit\": objects.getMyShips_limit\n}",
        "binding": {
            "type": "zeebe:input",
            "name": "queryParameters"
        },
        "condition": {
            "property": "operation",
            "equals": "getMyShips"
        },
        "optional": true
    },
        {
            "label": "shipSymbol",
            "description": "The symbol of the ship.",
            "type": "String",
            "feel": "optional",
            "group": "getShipCooldown",
            "value": "null",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.getShipCooldown_shipSymbol"
            },
            "condition": {
                "property": "operation",
                "equals": "getShipCooldown"
            },
            "constraints": {
                "notEmpty": true
            }
        },
            {
        "label": "Result Variable",
        "description": "Name of variable to store the response in",
        "group": "responseMapping",
        "value": "response_getShipCooldown",
        "type": "String",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultVariable"
        },
        "condition": {
            "property": "operation",
            "equals": "getShipCooldown"
        }
    },
    {
        "label": "Result Expression",
        "description": "Expression to map the response into process variables",
        "group": "responseMapping",
        "type": "Text",
        "feel": "required",
        "value": "=<GetShipCooldown200Response-response>",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultExpression"
        },
        "condition": {
            "property": "operation",
            "equals": "getShipCooldown"
        }
    },
        
    {
        "type": "Hidden",
        "value": "bearer",
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.type"
        },
        "condition": {
            "property": "operation",
            "equals": "getShipCooldown"
        }
    },
    {
        "label": "API Bearer Token (Bearer Authentication)",
        "group": "authentication",
        "type": "String",
        "feel": "optional",
        "optional": true,
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.token"
        },
        "condition": {
            "property": "operation",
            "equals": "getShipCooldown"
        }
    },

            {
        "label": "Method",
        "group": "modificationWarning",
        "type": "Dropdown",
        "value": "get",
        "condition": {
            "property": "operation",
            "equals": "getShipCooldown"
        },
        "choices": [
            { "name": "GET", "value": "get" },
            { "name": "POST", "value": "post" },
            { "name": "PATCH", "value": "patch" },
            { "name": "PUT", "value": "put" },
            { "name": "DELETE", "value": "delete" }
        ],
        "binding": {
            "type": "zeebe:input",
            "name": "method"
        }
    },
    {
        "label": "URL",
        "group": "modificationWarning",
        "type": "String",
        "feel": "optional",
        "value": "=\"https://api.spacetraders.io/v2/my/ships/\" + string(objects.getShipCooldown_shipSymbol) + \"/cooldown\"",
        "binding": {
            "type": "zeebe:input",
            "name": "url"
        },
        "condition": {
            "property": "operation",
            "equals": "getShipCooldown"
        }
    },
    {
        "label": "Query Parameters",
        "description": "FEEL map containing the query parameters",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "={\n}",
        "binding": {
            "type": "zeebe:input",
            "name": "queryParameters"
        },
        "condition": {
            "property": "operation",
            "equals": "getShipCooldown"
        },
        "optional": true
    },
        {
            "label": "shipSymbol",
            "description": "The ship symbol.",
            "type": "String",
            "feel": "optional",
            "group": "getShipNav",
            "value": "null",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.getShipNav_shipSymbol"
            },
            "condition": {
                "property": "operation",
                "equals": "getShipNav"
            },
            "constraints": {
                "notEmpty": true
            }
        },
            {
        "label": "Result Variable",
        "description": "Name of variable to store the response in",
        "group": "responseMapping",
        "value": "response_getShipNav",
        "type": "String",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultVariable"
        },
        "condition": {
            "property": "operation",
            "equals": "getShipNav"
        }
    },
    {
        "label": "Result Expression",
        "description": "Expression to map the response into process variables",
        "group": "responseMapping",
        "type": "Text",
        "feel": "required",
        "value": "=<GetShipNav200Response-response>",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultExpression"
        },
        "condition": {
            "property": "operation",
            "equals": "getShipNav"
        }
    },
        
    {
        "type": "Hidden",
        "value": "bearer",
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.type"
        },
        "condition": {
            "property": "operation",
            "equals": "getShipNav"
        }
    },
    {
        "label": "API Bearer Token (Bearer Authentication)",
        "group": "authentication",
        "type": "String",
        "feel": "optional",
        "optional": true,
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.token"
        },
        "condition": {
            "property": "operation",
            "equals": "getShipNav"
        }
    },

            {
        "label": "Method",
        "group": "modificationWarning",
        "type": "Dropdown",
        "value": "get",
        "condition": {
            "property": "operation",
            "equals": "getShipNav"
        },
        "choices": [
            { "name": "GET", "value": "get" },
            { "name": "POST", "value": "post" },
            { "name": "PATCH", "value": "patch" },
            { "name": "PUT", "value": "put" },
            { "name": "DELETE", "value": "delete" }
        ],
        "binding": {
            "type": "zeebe:input",
            "name": "method"
        }
    },
    {
        "label": "URL",
        "group": "modificationWarning",
        "type": "String",
        "feel": "optional",
        "value": "=\"https://api.spacetraders.io/v2/my/ships/\" + string(objects.getShipNav_shipSymbol) + \"/nav\"",
        "binding": {
            "type": "zeebe:input",
            "name": "url"
        },
        "condition": {
            "property": "operation",
            "equals": "getShipNav"
        }
    },
    {
        "label": "Query Parameters",
        "description": "FEEL map containing the query parameters",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "={\n}",
        "binding": {
            "type": "zeebe:input",
            "name": "queryParameters"
        },
        "condition": {
            "property": "operation",
            "equals": "getShipNav"
        },
        "optional": true
    },
        {
            "label": "shipSymbol",
            "description": "The ship&#39;s symbol.",
            "type": "String",
            "feel": "optional",
            "group": "installMount",
            "value": "null",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.installMount_shipSymbol"
            },
            "condition": {
                "property": "operation",
                "equals": "installMount"
            },
            "constraints": {
                "notEmpty": true
            }
        },
        {
            "label": "installMountRequest",
            "description": "",
            "type": "String",
            "feel": "required",
            "group": "installMount",
            "value": "=<InstallMountRequest>",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.installMount_installMountRequest"
            },
            "condition": {
                "property": "operation",
                "equals": "installMount"
            },
            "constraints": {
                "notEmpty": true
            }
        },
            {
        "label": "Result Variable",
        "description": "Name of variable to store the response in",
        "group": "responseMapping",
        "value": "response_installMount",
        "type": "String",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultVariable"
        },
        "condition": {
            "property": "operation",
            "equals": "installMount"
        }
    },
    {
        "label": "Result Expression",
        "description": "Expression to map the response into process variables",
        "group": "responseMapping",
        "type": "Text",
        "feel": "required",
        "value": "=<InstallMount201Response-response>",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultExpression"
        },
        "condition": {
            "property": "operation",
            "equals": "installMount"
        }
    },
        
    {
        "type": "Hidden",
        "value": "bearer",
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.type"
        },
        "condition": {
            "property": "operation",
            "equals": "installMount"
        }
    },
    {
        "label": "API Bearer Token (Bearer Authentication)",
        "group": "authentication",
        "type": "String",
        "feel": "optional",
        "optional": true,
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.token"
        },
        "condition": {
            "property": "operation",
            "equals": "installMount"
        }
    },

            {
        "label": "Method",
        "group": "modificationWarning",
        "type": "Dropdown",
        "value": "post",
        "condition": {
            "property": "operation",
            "equals": "installMount"
        },
        "choices": [
            { "name": "GET", "value": "get" },
            { "name": "POST", "value": "post" },
            { "name": "PATCH", "value": "patch" },
            { "name": "PUT", "value": "put" },
            { "name": "DELETE", "value": "delete" }
        ],
        "binding": {
            "type": "zeebe:input",
            "name": "method"
        }
    },
    {
        "label": "URL",
        "group": "modificationWarning",
        "type": "String",
        "feel": "optional",
        "value": "=\"https://api.spacetraders.io/v2/my/ships/\" + string(objects.installMount_shipSymbol) + \"/mounts/install\"",
        "binding": {
            "type": "zeebe:input",
            "name": "url"
        },
        "condition": {
            "property": "operation",
            "equals": "installMount"
        }
    },
    {
        "label": "Query Parameters",
        "description": "FEEL map containing the query parameters",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "={\n}",
        "binding": {
            "type": "zeebe:input",
            "name": "queryParameters"
        },
        "condition": {
            "property": "operation",
            "equals": "installMount"
        },
        "optional": true
    },
    {
        "label": "Request Body",
        "description": "JSON payload to send with the request",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "= objects.installMount_installMountRequest",
        "binding": {
            "type": "zeebe:input",
            "name": "body"
        },
        "condition": {
            "property": "operation",
            "equals": "installMount"
        },
        "optional": true
    },
        {
            "label": "shipSymbol",
            "description": "The ship symbol.",
            "type": "String",
            "feel": "optional",
            "group": "jettison",
            "value": "null",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.jettison_shipSymbol"
            },
            "condition": {
                "property": "operation",
                "equals": "jettison"
            },
            "constraints": {
                "notEmpty": true
            }
        },
        {
            "label": "jettisonRequest",
            "description": "",
            "type": "String",
            "feel": "required",
            "group": "jettison",
            "value": "=<JettisonRequest>",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.jettison_jettisonRequest"
            },
            "condition": {
                "property": "operation",
                "equals": "jettison"
            },
            "constraints": {
                "notEmpty": true
            }
        },
            {
        "label": "Result Variable",
        "description": "Name of variable to store the response in",
        "group": "responseMapping",
        "value": "response_jettison",
        "type": "String",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultVariable"
        },
        "condition": {
            "property": "operation",
            "equals": "jettison"
        }
    },
    {
        "label": "Result Expression",
        "description": "Expression to map the response into process variables",
        "group": "responseMapping",
        "type": "Text",
        "feel": "required",
        "value": "=<Jettison200Response-response>",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultExpression"
        },
        "condition": {
            "property": "operation",
            "equals": "jettison"
        }
    },
        
    {
        "type": "Hidden",
        "value": "bearer",
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.type"
        },
        "condition": {
            "property": "operation",
            "equals": "jettison"
        }
    },
    {
        "label": "API Bearer Token (Bearer Authentication)",
        "group": "authentication",
        "type": "String",
        "feel": "optional",
        "optional": true,
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.token"
        },
        "condition": {
            "property": "operation",
            "equals": "jettison"
        }
    },

            {
        "label": "Method",
        "group": "modificationWarning",
        "type": "Dropdown",
        "value": "post",
        "condition": {
            "property": "operation",
            "equals": "jettison"
        },
        "choices": [
            { "name": "GET", "value": "get" },
            { "name": "POST", "value": "post" },
            { "name": "PATCH", "value": "patch" },
            { "name": "PUT", "value": "put" },
            { "name": "DELETE", "value": "delete" }
        ],
        "binding": {
            "type": "zeebe:input",
            "name": "method"
        }
    },
    {
        "label": "URL",
        "group": "modificationWarning",
        "type": "String",
        "feel": "optional",
        "value": "=\"https://api.spacetraders.io/v2/my/ships/\" + string(objects.jettison_shipSymbol) + \"/jettison\"",
        "binding": {
            "type": "zeebe:input",
            "name": "url"
        },
        "condition": {
            "property": "operation",
            "equals": "jettison"
        }
    },
    {
        "label": "Query Parameters",
        "description": "FEEL map containing the query parameters",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "={\n}",
        "binding": {
            "type": "zeebe:input",
            "name": "queryParameters"
        },
        "condition": {
            "property": "operation",
            "equals": "jettison"
        },
        "optional": true
    },
    {
        "label": "Request Body",
        "description": "JSON payload to send with the request",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "= objects.jettison_jettisonRequest",
        "binding": {
            "type": "zeebe:input",
            "name": "body"
        },
        "condition": {
            "property": "operation",
            "equals": "jettison"
        },
        "optional": true
    },
        {
            "label": "shipSymbol",
            "description": "The ship symbol.",
            "type": "String",
            "feel": "optional",
            "group": "jumpShip",
            "value": "null",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.jumpShip_shipSymbol"
            },
            "condition": {
                "property": "operation",
                "equals": "jumpShip"
            },
            "constraints": {
                "notEmpty": true
            }
        },
        {
            "label": "jumpShipRequest",
            "description": "",
            "type": "String",
            "feel": "required",
            "group": "jumpShip",
            "value": "=<JumpShipRequest>",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.jumpShip_jumpShipRequest"
            },
            "condition": {
                "property": "operation",
                "equals": "jumpShip"
            },
            "constraints": {
                "notEmpty": true
            }
        },
            {
        "label": "Result Variable",
        "description": "Name of variable to store the response in",
        "group": "responseMapping",
        "value": "response_jumpShip",
        "type": "String",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultVariable"
        },
        "condition": {
            "property": "operation",
            "equals": "jumpShip"
        }
    },
    {
        "label": "Result Expression",
        "description": "Expression to map the response into process variables",
        "group": "responseMapping",
        "type": "Text",
        "feel": "required",
        "value": "=<JumpShip200Response-response>",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultExpression"
        },
        "condition": {
            "property": "operation",
            "equals": "jumpShip"
        }
    },
        
    {
        "type": "Hidden",
        "value": "bearer",
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.type"
        },
        "condition": {
            "property": "operation",
            "equals": "jumpShip"
        }
    },
    {
        "label": "API Bearer Token (Bearer Authentication)",
        "group": "authentication",
        "type": "String",
        "feel": "optional",
        "optional": true,
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.token"
        },
        "condition": {
            "property": "operation",
            "equals": "jumpShip"
        }
    },

            {
        "label": "Method",
        "group": "modificationWarning",
        "type": "Dropdown",
        "value": "post",
        "condition": {
            "property": "operation",
            "equals": "jumpShip"
        },
        "choices": [
            { "name": "GET", "value": "get" },
            { "name": "POST", "value": "post" },
            { "name": "PATCH", "value": "patch" },
            { "name": "PUT", "value": "put" },
            { "name": "DELETE", "value": "delete" }
        ],
        "binding": {
            "type": "zeebe:input",
            "name": "method"
        }
    },
    {
        "label": "URL",
        "group": "modificationWarning",
        "type": "String",
        "feel": "optional",
        "value": "=\"https://api.spacetraders.io/v2/my/ships/\" + string(objects.jumpShip_shipSymbol) + \"/jump\"",
        "binding": {
            "type": "zeebe:input",
            "name": "url"
        },
        "condition": {
            "property": "operation",
            "equals": "jumpShip"
        }
    },
    {
        "label": "Query Parameters",
        "description": "FEEL map containing the query parameters",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "={\n}",
        "binding": {
            "type": "zeebe:input",
            "name": "queryParameters"
        },
        "condition": {
            "property": "operation",
            "equals": "jumpShip"
        },
        "optional": true
    },
    {
        "label": "Request Body",
        "description": "JSON payload to send with the request",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "= objects.jumpShip_jumpShipRequest",
        "binding": {
            "type": "zeebe:input",
            "name": "body"
        },
        "condition": {
            "property": "operation",
            "equals": "jumpShip"
        },
        "optional": true
    },
        {
            "label": "shipSymbol",
            "description": "The ship symbol.",
            "type": "String",
            "feel": "optional",
            "group": "navigateShip",
            "value": "null",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.navigateShip_shipSymbol"
            },
            "condition": {
                "property": "operation",
                "equals": "navigateShip"
            },
            "constraints": {
                "notEmpty": true
            }
        },
        {
            "label": "navigateShipRequest",
            "description": "",
            "type": "String",
            "feel": "required",
            "group": "navigateShip",
            "value": "=<NavigateShipRequest>",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.navigateShip_navigateShipRequest"
            },
            "condition": {
                "property": "operation",
                "equals": "navigateShip"
            },
            "constraints": {
                "notEmpty": true
            }
        },
            {
        "label": "Result Variable",
        "description": "Name of variable to store the response in",
        "group": "responseMapping",
        "value": "response_navigateShip",
        "type": "String",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultVariable"
        },
        "condition": {
            "property": "operation",
            "equals": "navigateShip"
        }
    },
    {
        "label": "Result Expression",
        "description": "Expression to map the response into process variables",
        "group": "responseMapping",
        "type": "Text",
        "feel": "required",
        "value": "=<NavigateShip200Response-response>",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultExpression"
        },
        "condition": {
            "property": "operation",
            "equals": "navigateShip"
        }
    },
        
    {
        "type": "Hidden",
        "value": "bearer",
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.type"
        },
        "condition": {
            "property": "operation",
            "equals": "navigateShip"
        }
    },
    {
        "label": "API Bearer Token (Bearer Authentication)",
        "group": "authentication",
        "type": "String",
        "feel": "optional",
        "optional": true,
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.token"
        },
        "condition": {
            "property": "operation",
            "equals": "navigateShip"
        }
    },

            {
        "label": "Method",
        "group": "modificationWarning",
        "type": "Dropdown",
        "value": "post",
        "condition": {
            "property": "operation",
            "equals": "navigateShip"
        },
        "choices": [
            { "name": "GET", "value": "get" },
            { "name": "POST", "value": "post" },
            { "name": "PATCH", "value": "patch" },
            { "name": "PUT", "value": "put" },
            { "name": "DELETE", "value": "delete" }
        ],
        "binding": {
            "type": "zeebe:input",
            "name": "method"
        }
    },
    {
        "label": "URL",
        "group": "modificationWarning",
        "type": "String",
        "feel": "optional",
        "value": "=\"https://api.spacetraders.io/v2/my/ships/\" + string(objects.navigateShip_shipSymbol) + \"/navigate\"",
        "binding": {
            "type": "zeebe:input",
            "name": "url"
        },
        "condition": {
            "property": "operation",
            "equals": "navigateShip"
        }
    },
    {
        "label": "Query Parameters",
        "description": "FEEL map containing the query parameters",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "={\n}",
        "binding": {
            "type": "zeebe:input",
            "name": "queryParameters"
        },
        "condition": {
            "property": "operation",
            "equals": "navigateShip"
        },
        "optional": true
    },
    {
        "label": "Request Body",
        "description": "JSON payload to send with the request",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "= objects.navigateShip_navigateShipRequest",
        "binding": {
            "type": "zeebe:input",
            "name": "body"
        },
        "condition": {
            "property": "operation",
            "equals": "navigateShip"
        },
        "optional": true
    },
        {
            "label": "shipSymbol",
            "description": "The ship&#39;s symbol.",
            "type": "String",
            "feel": "optional",
            "group": "negotiateContract",
            "value": "null",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.negotiateContract_shipSymbol"
            },
            "condition": {
                "property": "operation",
                "equals": "negotiateContract"
            },
            "constraints": {
                "notEmpty": true
            }
        },
            {
        "label": "Result Variable",
        "description": "Name of variable to store the response in",
        "group": "responseMapping",
        "value": "response_negotiateContract",
        "type": "String",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultVariable"
        },
        "condition": {
            "property": "operation",
            "equals": "negotiateContract"
        }
    },
    {
        "label": "Result Expression",
        "description": "Expression to map the response into process variables",
        "group": "responseMapping",
        "type": "Text",
        "feel": "required",
        "value": "=<NegotiateContract200Response-response>",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultExpression"
        },
        "condition": {
            "property": "operation",
            "equals": "negotiateContract"
        }
    },
        
    {
        "type": "Hidden",
        "value": "bearer",
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.type"
        },
        "condition": {
            "property": "operation",
            "equals": "negotiateContract"
        }
    },
    {
        "label": "API Bearer Token (Bearer Authentication)",
        "group": "authentication",
        "type": "String",
        "feel": "optional",
        "optional": true,
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.token"
        },
        "condition": {
            "property": "operation",
            "equals": "negotiateContract"
        }
    },

            {
        "label": "Method",
        "group": "modificationWarning",
        "type": "Dropdown",
        "value": "post",
        "condition": {
            "property": "operation",
            "equals": "negotiateContract"
        },
        "choices": [
            { "name": "GET", "value": "get" },
            { "name": "POST", "value": "post" },
            { "name": "PATCH", "value": "patch" },
            { "name": "PUT", "value": "put" },
            { "name": "DELETE", "value": "delete" }
        ],
        "binding": {
            "type": "zeebe:input",
            "name": "method"
        }
    },
    {
        "label": "URL",
        "group": "modificationWarning",
        "type": "String",
        "feel": "optional",
        "value": "=\"https://api.spacetraders.io/v2/my/ships/\" + string(objects.negotiateContract_shipSymbol) + \"/negotiate/contract\"",
        "binding": {
            "type": "zeebe:input",
            "name": "url"
        },
        "condition": {
            "property": "operation",
            "equals": "negotiateContract"
        }
    },
    {
        "label": "Query Parameters",
        "description": "FEEL map containing the query parameters",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "={\n}",
        "binding": {
            "type": "zeebe:input",
            "name": "queryParameters"
        },
        "condition": {
            "property": "operation",
            "equals": "negotiateContract"
        },
        "optional": true
    },
    {
        "label": "Request Body",
        "description": "JSON payload to send with the request",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "=",
        "binding": {
            "type": "zeebe:input",
            "name": "body"
        },
        "condition": {
            "property": "operation",
            "equals": "negotiateContract"
        },
        "optional": true
    },
        {
            "label": "shipSymbol",
            "description": "The symbol of the ship.",
            "type": "String",
            "feel": "optional",
            "group": "orbitShip",
            "value": "null",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.orbitShip_shipSymbol"
            },
            "condition": {
                "property": "operation",
                "equals": "orbitShip"
            },
            "constraints": {
                "notEmpty": true
            }
        },
            {
        "label": "Result Variable",
        "description": "Name of variable to store the response in",
        "group": "responseMapping",
        "value": "response_orbitShip",
        "type": "String",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultVariable"
        },
        "condition": {
            "property": "operation",
            "equals": "orbitShip"
        }
    },
    {
        "label": "Result Expression",
        "description": "Expression to map the response into process variables",
        "group": "responseMapping",
        "type": "Text",
        "feel": "required",
        "value": "=<OrbitShip200Response-response>",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultExpression"
        },
        "condition": {
            "property": "operation",
            "equals": "orbitShip"
        }
    },
        
    {
        "type": "Hidden",
        "value": "bearer",
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.type"
        },
        "condition": {
            "property": "operation",
            "equals": "orbitShip"
        }
    },
    {
        "label": "API Bearer Token (Bearer Authentication)",
        "group": "authentication",
        "type": "String",
        "feel": "optional",
        "optional": true,
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.token"
        },
        "condition": {
            "property": "operation",
            "equals": "orbitShip"
        }
    },

            {
        "label": "Method",
        "group": "modificationWarning",
        "type": "Dropdown",
        "value": "post",
        "condition": {
            "property": "operation",
            "equals": "orbitShip"
        },
        "choices": [
            { "name": "GET", "value": "get" },
            { "name": "POST", "value": "post" },
            { "name": "PATCH", "value": "patch" },
            { "name": "PUT", "value": "put" },
            { "name": "DELETE", "value": "delete" }
        ],
        "binding": {
            "type": "zeebe:input",
            "name": "method"
        }
    },
    {
        "label": "URL",
        "group": "modificationWarning",
        "type": "String",
        "feel": "optional",
        "value": "=\"https://api.spacetraders.io/v2/my/ships/\" + string(objects.orbitShip_shipSymbol) + \"/orbit\"",
        "binding": {
            "type": "zeebe:input",
            "name": "url"
        },
        "condition": {
            "property": "operation",
            "equals": "orbitShip"
        }
    },
    {
        "label": "Query Parameters",
        "description": "FEEL map containing the query parameters",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "={\n}",
        "binding": {
            "type": "zeebe:input",
            "name": "queryParameters"
        },
        "condition": {
            "property": "operation",
            "equals": "orbitShip"
        },
        "optional": true
    },
    {
        "label": "Request Body",
        "description": "JSON payload to send with the request",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "=",
        "binding": {
            "type": "zeebe:input",
            "name": "body"
        },
        "condition": {
            "property": "operation",
            "equals": "orbitShip"
        },
        "optional": true
    },
        {
            "label": "shipSymbol",
            "description": "The ship symbol.",
            "type": "String",
            "feel": "optional",
            "group": "patchShipNav",
            "value": "null",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.patchShipNav_shipSymbol"
            },
            "condition": {
                "property": "operation",
                "equals": "patchShipNav"
            },
            "constraints": {
                "notEmpty": true
            }
        },
        {
            "label": "patchShipNavRequest",
            "description": "",
            "type": "String",
            "feel": "required",
            "group": "patchShipNav",
            "value": "=<PatchShipNavRequest>",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.patchShipNav_patchShipNavRequest"
            },
            "condition": {
                "property": "operation",
                "equals": "patchShipNav"
            },
            "constraints": {
                "notEmpty": true
            }
        },
            {
        "label": "Result Variable",
        "description": "Name of variable to store the response in",
        "group": "responseMapping",
        "value": "response_patchShipNav",
        "type": "String",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultVariable"
        },
        "condition": {
            "property": "operation",
            "equals": "patchShipNav"
        }
    },
    {
        "label": "Result Expression",
        "description": "Expression to map the response into process variables",
        "group": "responseMapping",
        "type": "Text",
        "feel": "required",
        "value": "=<GetShipNav200Response-response>",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultExpression"
        },
        "condition": {
            "property": "operation",
            "equals": "patchShipNav"
        }
    },
        
    {
        "type": "Hidden",
        "value": "bearer",
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.type"
        },
        "condition": {
            "property": "operation",
            "equals": "patchShipNav"
        }
    },
    {
        "label": "API Bearer Token (Bearer Authentication)",
        "group": "authentication",
        "type": "String",
        "feel": "optional",
        "optional": true,
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.token"
        },
        "condition": {
            "property": "operation",
            "equals": "patchShipNav"
        }
    },

            {
        "label": "Method",
        "group": "modificationWarning",
        "type": "Dropdown",
        "value": "patch",
        "condition": {
            "property": "operation",
            "equals": "patchShipNav"
        },
        "choices": [
            { "name": "GET", "value": "get" },
            { "name": "POST", "value": "post" },
            { "name": "PATCH", "value": "patch" },
            { "name": "PUT", "value": "put" },
            { "name": "DELETE", "value": "delete" }
        ],
        "binding": {
            "type": "zeebe:input",
            "name": "method"
        }
    },
    {
        "label": "URL",
        "group": "modificationWarning",
        "type": "String",
        "feel": "optional",
        "value": "=\"https://api.spacetraders.io/v2/my/ships/\" + string(objects.patchShipNav_shipSymbol) + \"/nav\"",
        "binding": {
            "type": "zeebe:input",
            "name": "url"
        },
        "condition": {
            "property": "operation",
            "equals": "patchShipNav"
        }
    },
    {
        "label": "Query Parameters",
        "description": "FEEL map containing the query parameters",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "={\n}",
        "binding": {
            "type": "zeebe:input",
            "name": "queryParameters"
        },
        "condition": {
            "property": "operation",
            "equals": "patchShipNav"
        },
        "optional": true
    },
    {
        "label": "Request Body",
        "description": "JSON payload to send with the request",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "= objects.patchShipNav_patchShipNavRequest",
        "binding": {
            "type": "zeebe:input",
            "name": "body"
        },
        "condition": {
            "property": "operation",
            "equals": "patchShipNav"
        },
        "optional": true
    },
        {
            "label": "shipSymbol",
            "description": "The ship&#39;s symbol.",
            "type": "String",
            "feel": "optional",
            "group": "purchaseCargo",
            "value": "null",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.purchaseCargo_shipSymbol"
            },
            "condition": {
                "property": "operation",
                "equals": "purchaseCargo"
            },
            "constraints": {
                "notEmpty": true
            }
        },
        {
            "label": "purchaseCargoRequest",
            "description": "",
            "type": "String",
            "feel": "required",
            "group": "purchaseCargo",
            "value": "=<PurchaseCargoRequest>",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.purchaseCargo_purchaseCargoRequest"
            },
            "condition": {
                "property": "operation",
                "equals": "purchaseCargo"
            },
            "constraints": {
                "notEmpty": true
            }
        },
            {
        "label": "Result Variable",
        "description": "Name of variable to store the response in",
        "group": "responseMapping",
        "value": "response_purchaseCargo",
        "type": "String",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultVariable"
        },
        "condition": {
            "property": "operation",
            "equals": "purchaseCargo"
        }
    },
    {
        "label": "Result Expression",
        "description": "Expression to map the response into process variables",
        "group": "responseMapping",
        "type": "Text",
        "feel": "required",
        "value": "=<PurchaseCargo201Response-response>",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultExpression"
        },
        "condition": {
            "property": "operation",
            "equals": "purchaseCargo"
        }
    },
        
    {
        "type": "Hidden",
        "value": "bearer",
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.type"
        },
        "condition": {
            "property": "operation",
            "equals": "purchaseCargo"
        }
    },
    {
        "label": "API Bearer Token (Bearer Authentication)",
        "group": "authentication",
        "type": "String",
        "feel": "optional",
        "optional": true,
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.token"
        },
        "condition": {
            "property": "operation",
            "equals": "purchaseCargo"
        }
    },

            {
        "label": "Method",
        "group": "modificationWarning",
        "type": "Dropdown",
        "value": "post",
        "condition": {
            "property": "operation",
            "equals": "purchaseCargo"
        },
        "choices": [
            { "name": "GET", "value": "get" },
            { "name": "POST", "value": "post" },
            { "name": "PATCH", "value": "patch" },
            { "name": "PUT", "value": "put" },
            { "name": "DELETE", "value": "delete" }
        ],
        "binding": {
            "type": "zeebe:input",
            "name": "method"
        }
    },
    {
        "label": "URL",
        "group": "modificationWarning",
        "type": "String",
        "feel": "optional",
        "value": "=\"https://api.spacetraders.io/v2/my/ships/\" + string(objects.purchaseCargo_shipSymbol) + \"/purchase\"",
        "binding": {
            "type": "zeebe:input",
            "name": "url"
        },
        "condition": {
            "property": "operation",
            "equals": "purchaseCargo"
        }
    },
    {
        "label": "Query Parameters",
        "description": "FEEL map containing the query parameters",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "={\n}",
        "binding": {
            "type": "zeebe:input",
            "name": "queryParameters"
        },
        "condition": {
            "property": "operation",
            "equals": "purchaseCargo"
        },
        "optional": true
    },
    {
        "label": "Request Body",
        "description": "JSON payload to send with the request",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "= objects.purchaseCargo_purchaseCargoRequest",
        "binding": {
            "type": "zeebe:input",
            "name": "body"
        },
        "condition": {
            "property": "operation",
            "equals": "purchaseCargo"
        },
        "optional": true
    },
        {
            "label": "purchaseShipRequest",
            "description": "",
            "type": "String",
            "feel": "required",
            "group": "purchaseShip",
            "value": "=<PurchaseShipRequest>",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.purchaseShip_purchaseShipRequest"
            },
            "condition": {
                "property": "operation",
                "equals": "purchaseShip"
            },
            "constraints": {
                "notEmpty": true
            }
        },
            {
        "label": "Result Variable",
        "description": "Name of variable to store the response in",
        "group": "responseMapping",
        "value": "response_purchaseShip",
        "type": "String",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultVariable"
        },
        "condition": {
            "property": "operation",
            "equals": "purchaseShip"
        }
    },
    {
        "label": "Result Expression",
        "description": "Expression to map the response into process variables",
        "group": "responseMapping",
        "type": "Text",
        "feel": "required",
        "value": "=<PurchaseShip201Response-response>",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultExpression"
        },
        "condition": {
            "property": "operation",
            "equals": "purchaseShip"
        }
    },
        
    {
        "type": "Hidden",
        "value": "bearer",
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.type"
        },
        "condition": {
            "property": "operation",
            "equals": "purchaseShip"
        }
    },
    {
        "label": "API Bearer Token (Bearer Authentication)",
        "group": "authentication",
        "type": "String",
        "feel": "optional",
        "optional": true,
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.token"
        },
        "condition": {
            "property": "operation",
            "equals": "purchaseShip"
        }
    },

            {
        "label": "Method",
        "group": "modificationWarning",
        "type": "Dropdown",
        "value": "post",
        "condition": {
            "property": "operation",
            "equals": "purchaseShip"
        },
        "choices": [
            { "name": "GET", "value": "get" },
            { "name": "POST", "value": "post" },
            { "name": "PATCH", "value": "patch" },
            { "name": "PUT", "value": "put" },
            { "name": "DELETE", "value": "delete" }
        ],
        "binding": {
            "type": "zeebe:input",
            "name": "method"
        }
    },
    {
        "label": "URL",
        "group": "modificationWarning",
        "type": "String",
        "feel": "optional",
        "value": "=\"https://api.spacetraders.io/v2/my/ships\"",
        "binding": {
            "type": "zeebe:input",
            "name": "url"
        },
        "condition": {
            "property": "operation",
            "equals": "purchaseShip"
        }
    },
    {
        "label": "Query Parameters",
        "description": "FEEL map containing the query parameters",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "={\n}",
        "binding": {
            "type": "zeebe:input",
            "name": "queryParameters"
        },
        "condition": {
            "property": "operation",
            "equals": "purchaseShip"
        },
        "optional": true
    },
    {
        "label": "Request Body",
        "description": "JSON payload to send with the request",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "= objects.purchaseShip_purchaseShipRequest",
        "binding": {
            "type": "zeebe:input",
            "name": "body"
        },
        "condition": {
            "property": "operation",
            "equals": "purchaseShip"
        },
        "optional": true
    },
        {
            "label": "shipSymbol",
            "description": "The ship symbol.",
            "type": "String",
            "feel": "optional",
            "group": "refuelShip",
            "value": "null",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.refuelShip_shipSymbol"
            },
            "condition": {
                "property": "operation",
                "equals": "refuelShip"
            },
            "constraints": {
                "notEmpty": true
            }
        },
        {
            "label": "refuelShipRequest",
            "description": "",
            "type": "String",
            "feel": "required",
            "group": "refuelShip",
            "value": "=<RefuelShipRequest>",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.refuelShip_refuelShipRequest"
            },
            "condition": {
                "property": "operation",
                "equals": "refuelShip"
            },
            "constraints": {
                "notEmpty": true
            }
        },
            {
        "label": "Result Variable",
        "description": "Name of variable to store the response in",
        "group": "responseMapping",
        "value": "response_refuelShip",
        "type": "String",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultVariable"
        },
        "condition": {
            "property": "operation",
            "equals": "refuelShip"
        }
    },
    {
        "label": "Result Expression",
        "description": "Expression to map the response into process variables",
        "group": "responseMapping",
        "type": "Text",
        "feel": "required",
        "value": "=<RefuelShip200Response-response>",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultExpression"
        },
        "condition": {
            "property": "operation",
            "equals": "refuelShip"
        }
    },
        
    {
        "type": "Hidden",
        "value": "bearer",
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.type"
        },
        "condition": {
            "property": "operation",
            "equals": "refuelShip"
        }
    },
    {
        "label": "API Bearer Token (Bearer Authentication)",
        "group": "authentication",
        "type": "String",
        "feel": "optional",
        "optional": true,
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.token"
        },
        "condition": {
            "property": "operation",
            "equals": "refuelShip"
        }
    },

            {
        "label": "Method",
        "group": "modificationWarning",
        "type": "Dropdown",
        "value": "post",
        "condition": {
            "property": "operation",
            "equals": "refuelShip"
        },
        "choices": [
            { "name": "GET", "value": "get" },
            { "name": "POST", "value": "post" },
            { "name": "PATCH", "value": "patch" },
            { "name": "PUT", "value": "put" },
            { "name": "DELETE", "value": "delete" }
        ],
        "binding": {
            "type": "zeebe:input",
            "name": "method"
        }
    },
    {
        "label": "URL",
        "group": "modificationWarning",
        "type": "String",
        "feel": "optional",
        "value": "=\"https://api.spacetraders.io/v2/my/ships/\" + string(objects.refuelShip_shipSymbol) + \"/refuel\"",
        "binding": {
            "type": "zeebe:input",
            "name": "url"
        },
        "condition": {
            "property": "operation",
            "equals": "refuelShip"
        }
    },
    {
        "label": "Query Parameters",
        "description": "FEEL map containing the query parameters",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "={\n}",
        "binding": {
            "type": "zeebe:input",
            "name": "queryParameters"
        },
        "condition": {
            "property": "operation",
            "equals": "refuelShip"
        },
        "optional": true
    },
    {
        "label": "Request Body",
        "description": "JSON payload to send with the request",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "= objects.refuelShip_refuelShipRequest",
        "binding": {
            "type": "zeebe:input",
            "name": "body"
        },
        "condition": {
            "property": "operation",
            "equals": "refuelShip"
        },
        "optional": true
    },
        {
            "label": "shipSymbol",
            "description": "The ship&#39;s symbol.",
            "type": "String",
            "feel": "optional",
            "group": "removeMount",
            "value": "null",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.removeMount_shipSymbol"
            },
            "condition": {
                "property": "operation",
                "equals": "removeMount"
            },
            "constraints": {
                "notEmpty": true
            }
        },
        {
            "label": "removeMountRequest",
            "description": "",
            "type": "String",
            "feel": "required",
            "group": "removeMount",
            "value": "=<RemoveMountRequest>",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.removeMount_removeMountRequest"
            },
            "condition": {
                "property": "operation",
                "equals": "removeMount"
            },
            "constraints": {
                "notEmpty": true
            }
        },
            {
        "label": "Result Variable",
        "description": "Name of variable to store the response in",
        "group": "responseMapping",
        "value": "response_removeMount",
        "type": "String",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultVariable"
        },
        "condition": {
            "property": "operation",
            "equals": "removeMount"
        }
    },
    {
        "label": "Result Expression",
        "description": "Expression to map the response into process variables",
        "group": "responseMapping",
        "type": "Text",
        "feel": "required",
        "value": "=<RemoveMount201Response-response>",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultExpression"
        },
        "condition": {
            "property": "operation",
            "equals": "removeMount"
        }
    },
        
    {
        "type": "Hidden",
        "value": "bearer",
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.type"
        },
        "condition": {
            "property": "operation",
            "equals": "removeMount"
        }
    },
    {
        "label": "API Bearer Token (Bearer Authentication)",
        "group": "authentication",
        "type": "String",
        "feel": "optional",
        "optional": true,
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.token"
        },
        "condition": {
            "property": "operation",
            "equals": "removeMount"
        }
    },

            {
        "label": "Method",
        "group": "modificationWarning",
        "type": "Dropdown",
        "value": "post",
        "condition": {
            "property": "operation",
            "equals": "removeMount"
        },
        "choices": [
            { "name": "GET", "value": "get" },
            { "name": "POST", "value": "post" },
            { "name": "PATCH", "value": "patch" },
            { "name": "PUT", "value": "put" },
            { "name": "DELETE", "value": "delete" }
        ],
        "binding": {
            "type": "zeebe:input",
            "name": "method"
        }
    },
    {
        "label": "URL",
        "group": "modificationWarning",
        "type": "String",
        "feel": "optional",
        "value": "=\"https://api.spacetraders.io/v2/my/ships/\" + string(objects.removeMount_shipSymbol) + \"/mounts/remove\"",
        "binding": {
            "type": "zeebe:input",
            "name": "url"
        },
        "condition": {
            "property": "operation",
            "equals": "removeMount"
        }
    },
    {
        "label": "Query Parameters",
        "description": "FEEL map containing the query parameters",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "={\n}",
        "binding": {
            "type": "zeebe:input",
            "name": "queryParameters"
        },
        "condition": {
            "property": "operation",
            "equals": "removeMount"
        },
        "optional": true
    },
    {
        "label": "Request Body",
        "description": "JSON payload to send with the request",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "= objects.removeMount_removeMountRequest",
        "binding": {
            "type": "zeebe:input",
            "name": "body"
        },
        "condition": {
            "property": "operation",
            "equals": "removeMount"
        },
        "optional": true
    },
        {
            "label": "shipSymbol",
            "description": "Symbol of a ship.",
            "type": "String",
            "feel": "optional",
            "group": "sellCargo",
            "value": "null",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.sellCargo_shipSymbol"
            },
            "condition": {
                "property": "operation",
                "equals": "sellCargo"
            },
            "constraints": {
                "notEmpty": true
            }
        },
        {
            "label": "sellCargoRequest",
            "description": "",
            "type": "String",
            "feel": "required",
            "group": "sellCargo",
            "value": "=<SellCargoRequest>",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.sellCargo_sellCargoRequest"
            },
            "condition": {
                "property": "operation",
                "equals": "sellCargo"
            },
            "constraints": {
                "notEmpty": true
            }
        },
            {
        "label": "Result Variable",
        "description": "Name of variable to store the response in",
        "group": "responseMapping",
        "value": "response_sellCargo",
        "type": "String",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultVariable"
        },
        "condition": {
            "property": "operation",
            "equals": "sellCargo"
        }
    },
    {
        "label": "Result Expression",
        "description": "Expression to map the response into process variables",
        "group": "responseMapping",
        "type": "Text",
        "feel": "required",
        "value": "=<SellCargo201Response-response>",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultExpression"
        },
        "condition": {
            "property": "operation",
            "equals": "sellCargo"
        }
    },
        
    {
        "type": "Hidden",
        "value": "bearer",
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.type"
        },
        "condition": {
            "property": "operation",
            "equals": "sellCargo"
        }
    },
    {
        "label": "API Bearer Token (Bearer Authentication)",
        "group": "authentication",
        "type": "String",
        "feel": "optional",
        "optional": true,
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.token"
        },
        "condition": {
            "property": "operation",
            "equals": "sellCargo"
        }
    },

            {
        "label": "Method",
        "group": "modificationWarning",
        "type": "Dropdown",
        "value": "post",
        "condition": {
            "property": "operation",
            "equals": "sellCargo"
        },
        "choices": [
            { "name": "GET", "value": "get" },
            { "name": "POST", "value": "post" },
            { "name": "PATCH", "value": "patch" },
            { "name": "PUT", "value": "put" },
            { "name": "DELETE", "value": "delete" }
        ],
        "binding": {
            "type": "zeebe:input",
            "name": "method"
        }
    },
    {
        "label": "URL",
        "group": "modificationWarning",
        "type": "String",
        "feel": "optional",
        "value": "=\"https://api.spacetraders.io/v2/my/ships/\" + string(objects.sellCargo_shipSymbol) + \"/sell\"",
        "binding": {
            "type": "zeebe:input",
            "name": "url"
        },
        "condition": {
            "property": "operation",
            "equals": "sellCargo"
        }
    },
    {
        "label": "Query Parameters",
        "description": "FEEL map containing the query parameters",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "={\n}",
        "binding": {
            "type": "zeebe:input",
            "name": "queryParameters"
        },
        "condition": {
            "property": "operation",
            "equals": "sellCargo"
        },
        "optional": true
    },
    {
        "label": "Request Body",
        "description": "JSON payload to send with the request",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "= objects.sellCargo_sellCargoRequest",
        "binding": {
            "type": "zeebe:input",
            "name": "body"
        },
        "condition": {
            "property": "operation",
            "equals": "sellCargo"
        },
        "optional": true
    },
        {
            "label": "shipSymbol",
            "description": "The symbol of the ship.",
            "type": "String",
            "feel": "optional",
            "group": "shipRefine",
            "value": "null",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.shipRefine_shipSymbol"
            },
            "condition": {
                "property": "operation",
                "equals": "shipRefine"
            },
            "constraints": {
                "notEmpty": true
            }
        },
        {
            "label": "shipRefineRequest",
            "description": "",
            "type": "String",
            "feel": "required",
            "group": "shipRefine",
            "value": "=<ShipRefineRequest>",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.shipRefine_shipRefineRequest"
            },
            "condition": {
                "property": "operation",
                "equals": "shipRefine"
            },
            "constraints": {
                "notEmpty": true
            }
        },
            {
        "label": "Result Variable",
        "description": "Name of variable to store the response in",
        "group": "responseMapping",
        "value": "response_shipRefine",
        "type": "String",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultVariable"
        },
        "condition": {
            "property": "operation",
            "equals": "shipRefine"
        }
    },
    {
        "label": "Result Expression",
        "description": "Expression to map the response into process variables",
        "group": "responseMapping",
        "type": "Text",
        "feel": "required",
        "value": "=<ShipRefine201Response-response>",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultExpression"
        },
        "condition": {
            "property": "operation",
            "equals": "shipRefine"
        }
    },
        
    {
        "type": "Hidden",
        "value": "bearer",
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.type"
        },
        "condition": {
            "property": "operation",
            "equals": "shipRefine"
        }
    },
    {
        "label": "API Bearer Token (Bearer Authentication)",
        "group": "authentication",
        "type": "String",
        "feel": "optional",
        "optional": true,
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.token"
        },
        "condition": {
            "property": "operation",
            "equals": "shipRefine"
        }
    },

            {
        "label": "Method",
        "group": "modificationWarning",
        "type": "Dropdown",
        "value": "post",
        "condition": {
            "property": "operation",
            "equals": "shipRefine"
        },
        "choices": [
            { "name": "GET", "value": "get" },
            { "name": "POST", "value": "post" },
            { "name": "PATCH", "value": "patch" },
            { "name": "PUT", "value": "put" },
            { "name": "DELETE", "value": "delete" }
        ],
        "binding": {
            "type": "zeebe:input",
            "name": "method"
        }
    },
    {
        "label": "URL",
        "group": "modificationWarning",
        "type": "String",
        "feel": "optional",
        "value": "=\"https://api.spacetraders.io/v2/my/ships/\" + string(objects.shipRefine_shipSymbol) + \"/refine\"",
        "binding": {
            "type": "zeebe:input",
            "name": "url"
        },
        "condition": {
            "property": "operation",
            "equals": "shipRefine"
        }
    },
    {
        "label": "Query Parameters",
        "description": "FEEL map containing the query parameters",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "={\n}",
        "binding": {
            "type": "zeebe:input",
            "name": "queryParameters"
        },
        "condition": {
            "property": "operation",
            "equals": "shipRefine"
        },
        "optional": true
    },
    {
        "label": "Request Body",
        "description": "JSON payload to send with the request",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "= objects.shipRefine_shipRefineRequest",
        "binding": {
            "type": "zeebe:input",
            "name": "body"
        },
        "condition": {
            "property": "operation",
            "equals": "shipRefine"
        },
        "optional": true
    },
        {
            "label": "shipSymbol",
            "description": "The transferring ship&#39;s symbol.",
            "type": "String",
            "feel": "optional",
            "group": "transferCargo",
            "value": "null",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.transferCargo_shipSymbol"
            },
            "condition": {
                "property": "operation",
                "equals": "transferCargo"
            },
            "constraints": {
                "notEmpty": true
            }
        },
        {
            "label": "transferCargoRequest",
            "description": "",
            "type": "String",
            "feel": "required",
            "group": "transferCargo",
            "value": "=<TransferCargoRequest>",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.transferCargo_transferCargoRequest"
            },
            "condition": {
                "property": "operation",
                "equals": "transferCargo"
            },
            "constraints": {
                "notEmpty": true
            }
        },
            {
        "label": "Result Variable",
        "description": "Name of variable to store the response in",
        "group": "responseMapping",
        "value": "response_transferCargo",
        "type": "String",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultVariable"
        },
        "condition": {
            "property": "operation",
            "equals": "transferCargo"
        }
    },
    {
        "label": "Result Expression",
        "description": "Expression to map the response into process variables",
        "group": "responseMapping",
        "type": "Text",
        "feel": "required",
        "value": "=<TransferCargo200Response-response>",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultExpression"
        },
        "condition": {
            "property": "operation",
            "equals": "transferCargo"
        }
    },
        
    {
        "type": "Hidden",
        "value": "bearer",
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.type"
        },
        "condition": {
            "property": "operation",
            "equals": "transferCargo"
        }
    },
    {
        "label": "API Bearer Token (Bearer Authentication)",
        "group": "authentication",
        "type": "String",
        "feel": "optional",
        "optional": true,
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.token"
        },
        "condition": {
            "property": "operation",
            "equals": "transferCargo"
        }
    },

            {
        "label": "Method",
        "group": "modificationWarning",
        "type": "Dropdown",
        "value": "post",
        "condition": {
            "property": "operation",
            "equals": "transferCargo"
        },
        "choices": [
            { "name": "GET", "value": "get" },
            { "name": "POST", "value": "post" },
            { "name": "PATCH", "value": "patch" },
            { "name": "PUT", "value": "put" },
            { "name": "DELETE", "value": "delete" }
        ],
        "binding": {
            "type": "zeebe:input",
            "name": "method"
        }
    },
    {
        "label": "URL",
        "group": "modificationWarning",
        "type": "String",
        "feel": "optional",
        "value": "=\"https://api.spacetraders.io/v2/my/ships/\" + string(objects.transferCargo_shipSymbol) + \"/transfer\"",
        "binding": {
            "type": "zeebe:input",
            "name": "url"
        },
        "condition": {
            "property": "operation",
            "equals": "transferCargo"
        }
    },
    {
        "label": "Query Parameters",
        "description": "FEEL map containing the query parameters",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "={\n}",
        "binding": {
            "type": "zeebe:input",
            "name": "queryParameters"
        },
        "condition": {
            "property": "operation",
            "equals": "transferCargo"
        },
        "optional": true
    },
    {
        "label": "Request Body",
        "description": "JSON payload to send with the request",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "= objects.transferCargo_transferCargoRequest",
        "binding": {
            "type": "zeebe:input",
            "name": "body"
        },
        "condition": {
            "property": "operation",
            "equals": "transferCargo"
        },
        "optional": true
    },
        {
            "label": "shipSymbol",
            "description": "The ship symbol.",
            "type": "String",
            "feel": "optional",
            "group": "warpShip",
            "value": "null",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.warpShip_shipSymbol"
            },
            "condition": {
                "property": "operation",
                "equals": "warpShip"
            },
            "constraints": {
                "notEmpty": true
            }
        },
        {
            "label": "navigateShipRequest",
            "description": "",
            "type": "String",
            "feel": "required",
            "group": "warpShip",
            "value": "=<NavigateShipRequest>",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.warpShip_navigateShipRequest"
            },
            "condition": {
                "property": "operation",
                "equals": "warpShip"
            },
            "constraints": {
                "notEmpty": true
            }
        },
            {
        "label": "Result Variable",
        "description": "Name of variable to store the response in",
        "group": "responseMapping",
        "value": "response_warpShip",
        "type": "String",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultVariable"
        },
        "condition": {
            "property": "operation",
            "equals": "warpShip"
        }
    },
    {
        "label": "Result Expression",
        "description": "Expression to map the response into process variables",
        "group": "responseMapping",
        "type": "Text",
        "feel": "required",
        "value": "=<NavigateShip200Response-response>",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultExpression"
        },
        "condition": {
            "property": "operation",
            "equals": "warpShip"
        }
    },
        
    {
        "type": "Hidden",
        "value": "bearer",
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.type"
        },
        "condition": {
            "property": "operation",
            "equals": "warpShip"
        }
    },
    {
        "label": "API Bearer Token (Bearer Authentication)",
        "group": "authentication",
        "type": "String",
        "feel": "optional",
        "optional": true,
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.token"
        },
        "condition": {
            "property": "operation",
            "equals": "warpShip"
        }
    },

            {
        "label": "Method",
        "group": "modificationWarning",
        "type": "Dropdown",
        "value": "post",
        "condition": {
            "property": "operation",
            "equals": "warpShip"
        },
        "choices": [
            { "name": "GET", "value": "get" },
            { "name": "POST", "value": "post" },
            { "name": "PATCH", "value": "patch" },
            { "name": "PUT", "value": "put" },
            { "name": "DELETE", "value": "delete" }
        ],
        "binding": {
            "type": "zeebe:input",
            "name": "method"
        }
    },
    {
        "label": "URL",
        "group": "modificationWarning",
        "type": "String",
        "feel": "optional",
        "value": "=\"https://api.spacetraders.io/v2/my/ships/\" + string(objects.warpShip_shipSymbol) + \"/warp\"",
        "binding": {
            "type": "zeebe:input",
            "name": "url"
        },
        "condition": {
            "property": "operation",
            "equals": "warpShip"
        }
    },
    {
        "label": "Query Parameters",
        "description": "FEEL map containing the query parameters",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "={\n}",
        "binding": {
            "type": "zeebe:input",
            "name": "queryParameters"
        },
        "condition": {
            "property": "operation",
            "equals": "warpShip"
        },
        "optional": true
    },
    {
        "label": "Request Body",
        "description": "JSON payload to send with the request",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "= objects.warpShip_navigateShipRequest",
        "binding": {
            "type": "zeebe:input",
            "name": "body"
        },
        "condition": {
            "property": "operation",
            "equals": "warpShip"
        },
        "optional": true
    }
    ]
}
