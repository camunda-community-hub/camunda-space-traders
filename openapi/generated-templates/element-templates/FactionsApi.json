{     
    "$schema": "https://unpkg.com/@camunda/zeebe-element-templates-json-schema/resources/schema.json",
    "name": "SpaceTraders API - Factions",
    "id": "com.camunda.generated.FactionsApi",
    "description": "SpaceTraders API - Factions, Schema Version 2.0.0. Generated using the OpenAPI generator.",
        "icon": {
        "faviconBasePath": "https://api.spacetraders.io/v2",
        "contents": "https://t0.gstatic.com/faviconV2?client=SOCIAL&type=FAVICON&fallback_opts=TYPE,SIZE,URL&url=https://api.spacetraders.io/v2&size=32"
    },
    "version": 1,
    "appliesTo": [
        "bpmn:Task"
    ],
    "elementType": {
        "value": "bpmn:ServiceTask"
    },
    "groups": [
        {
            "id": "authentication",
            "label": "Authentication"
        },
        {
            "id": "operation",
            "label": "Operation"
        },
        {
            "id": "responseMapping",
            "label": "Response Mapping"
        },
        {
            "id": "getFaction",
            "label": "Parameters"
        },
        {
            "id": "getFactions",
            "label": "Parameters"
        }
    ,
        {
            "id": "modificationWarning",
            "label": "Generated (DO NOT MODIFY)"
        }
    ],
    "properties": [
        {
            "type": "Hidden",
            "value": "io.camunda:http-json:1",
            "binding": {
                "type": "zeebe:taskDefinition:type"
            }
        },
        {
            "type": "Hidden",
            "value": "placeholder",
            "binding": {
                "type": "zeebe:input",
                "name": "objects"
            }
        },
        {
            "label": "Operation",
            "id": "operation",
            "description": "Specify the operation to call.",
            "type": "Dropdown",
            "group": "operation",
            "value": "getFaction",
            "choices": [
                { "name": "Reset choice", "value": "-" },
                    { "name": "getFaction - Get Faction", "value": "getFaction" },
                    { "name": "getFactions - List Factions", "value": "getFactions" }
            ],
            "binding": {
                "type": "zeebe:taskHeader",
                "key": "operation"
            }
        },

        {
            "label": "factionSymbol",
            "description": "The faction symbol",
            "type": "String",
            "feel": "optional",
            "group": "getFaction",
            "value": "null",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.getFaction_factionSymbol"
            },
            "condition": {
                "property": "operation",
                "equals": "getFaction"
            },
            "constraints": {
                "notEmpty": true
            }
        },
            {
        "label": "Result Variable",
        "description": "Name of variable to store the response in",
        "group": "responseMapping",
        "value": "response_getFaction",
        "type": "String",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultVariable"
        },
        "condition": {
            "property": "operation",
            "equals": "getFaction"
        }
    },
    {
        "label": "Result Expression",
        "description": "Expression to map the response into process variables",
        "group": "responseMapping",
        "type": "Text",
        "feel": "required",
        "value": "=<GetFaction200Response-response>",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultExpression"
        },
        "condition": {
            "property": "operation",
            "equals": "getFaction"
        }
    },
        
    {
        "type": "Hidden",
        "value": "bearer",
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.type"
        },
        "condition": {
            "property": "operation",
            "equals": "getFaction"
        }
    },
    {
        "label": "API Bearer Token (Bearer Authentication)",
        "group": "authentication",
        "type": "String",
        "feel": "optional",
        "optional": true,
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.token"
        },
        "condition": {
            "property": "operation",
            "equals": "getFaction"
        }
    },

            {
        "label": "Method",
        "group": "modificationWarning",
        "type": "Dropdown",
        "value": "get",
        "condition": {
            "property": "operation",
            "equals": "getFaction"
        },
        "choices": [
            { "name": "GET", "value": "get" },
            { "name": "POST", "value": "post" },
            { "name": "PATCH", "value": "patch" },
            { "name": "PUT", "value": "put" },
            { "name": "DELETE", "value": "delete" }
        ],
        "binding": {
            "type": "zeebe:input",
            "name": "method"
        }
    },
    {
        "label": "URL",
        "group": "modificationWarning",
        "type": "String",
        "feel": "optional",
        "value": "=\"https://api.spacetraders.io/v2/factions/\" + string(objects.getFaction_factionSymbol) + \"\"",
        "binding": {
            "type": "zeebe:input",
            "name": "url"
        },
        "condition": {
            "property": "operation",
            "equals": "getFaction"
        }
    },
    {
        "label": "Query Parameters",
        "description": "FEEL map containing the query parameters",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "={\n}",
        "binding": {
            "type": "zeebe:input",
            "name": "queryParameters"
        },
        "condition": {
            "property": "operation",
            "equals": "getFaction"
        },
        "optional": true
    },
        {
            "label": "page",
            "description": "What entry offset to request",
            "type": "String",
            "feel": "optional",
            "group": "getFactions",
            "value": "1",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.getFactions_page"
            },
            "condition": {
                "property": "operation",
                "equals": "getFactions"
            },
            "constraints": {
                "notEmpty": true
            }
        },
        {
            "label": "limit",
            "description": "How many entries to return per page",
            "type": "String",
            "feel": "optional",
            "group": "getFactions",
            "value": "10",
            "binding": {
                "type": "zeebe:input",
                "name": "objects.getFactions_limit"
            },
            "condition": {
                "property": "operation",
                "equals": "getFactions"
            },
            "constraints": {
                "notEmpty": true
            }
        },
            {
        "label": "Result Variable",
        "description": "Name of variable to store the response in",
        "group": "responseMapping",
        "value": "response_getFactions",
        "type": "String",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultVariable"
        },
        "condition": {
            "property": "operation",
            "equals": "getFactions"
        }
    },
    {
        "label": "Result Expression",
        "description": "Expression to map the response into process variables",
        "group": "responseMapping",
        "type": "Text",
        "feel": "required",
        "value": "=<GetFactions200Response-response>",
        "binding": {
            "type": "zeebe:taskHeader",
            "key": "resultExpression"
        },
        "condition": {
            "property": "operation",
            "equals": "getFactions"
        }
    },
        
    {
        "type": "Hidden",
        "value": "bearer",
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.type"
        },
        "condition": {
            "property": "operation",
            "equals": "getFactions"
        }
    },
    {
        "label": "API Bearer Token (Bearer Authentication)",
        "group": "authentication",
        "type": "String",
        "feel": "optional",
        "optional": true,
        "binding": {
            "type": "zeebe:input",
            "name": "authentication.token"
        },
        "condition": {
            "property": "operation",
            "equals": "getFactions"
        }
    },

            {
        "label": "Method",
        "group": "modificationWarning",
        "type": "Dropdown",
        "value": "get",
        "condition": {
            "property": "operation",
            "equals": "getFactions"
        },
        "choices": [
            { "name": "GET", "value": "get" },
            { "name": "POST", "value": "post" },
            { "name": "PATCH", "value": "patch" },
            { "name": "PUT", "value": "put" },
            { "name": "DELETE", "value": "delete" }
        ],
        "binding": {
            "type": "zeebe:input",
            "name": "method"
        }
    },
    {
        "label": "URL",
        "group": "modificationWarning",
        "type": "String",
        "feel": "optional",
        "value": "=\"https://api.spacetraders.io/v2/factions\"",
        "binding": {
            "type": "zeebe:input",
            "name": "url"
        },
        "condition": {
            "property": "operation",
            "equals": "getFactions"
        }
    },
    {
        "label": "Query Parameters",
        "description": "FEEL map containing the query parameters",
        "group": "modificationWarning",
        "type": "String",
        "feel": "required",
        "value": "={\n\t\"page\": objects.getFactions_page,\n\t\"limit\": objects.getFactions_limit\n}",
        "binding": {
            "type": "zeebe:input",
            "name": "queryParameters"
        },
        "condition": {
            "property": "operation",
            "equals": "getFactions"
        },
        "optional": true
    }
    ]
}
